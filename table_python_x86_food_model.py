import matplotlib.pyplot as plt


load_model_time_including_gpu = [1.508925, 1.471495, 1.487943, 1.477061, 1.533959, 1.491630, 1.488651, 1.499490, 1.468800, 1.473675, 1.476413, 1.473411, 1.490419, 1.483021, 1.503121, 1.547460, 1.539651, 1.502367, 1.500600, 1.488615, 1.514719, 1.491681, 1.489559, 1.570678, 1.493044]
numpy_preprocess_time = [0.001819, 0.000357, 0.000398, 0.000426, 0.000544, 0.000473, 0.000394, 0.000441, 0.000397, 0.000403, 0.000547, 0.000382, 0.000477, 0.000416, 0.000395, 0.000357, 0.000361, 0.000311, 0.000316, 0.000396, 0.000409, 0.000401, 0.000344, 0.000411, 0.000809, 0.000421, 0.000439, 0.000327, 0.000368, 0.000413, 0.000305, 0.000415, 0.000426, 0.000411, 0.000536, 0.00039, 0.000389, 0.000436, 0.000449, 0.000571, 0.000527, 0.000658, 0.00043, 0.000374, 0.000491, 0.000524, 0.000364, 0.000484, 0.000522, 0.000365, 0.000449, 0.000427, 0.000419, 0.000567, 0.001236, 0.00033, 0.000373, 0.001131, 0.000363, 0.000404, 0.000418, 0.00031, 0.000602, 0.000495, 0.000328, 0.000553, 0.000726, 0.00034, 0.000455, 0.000512, 0.00046, 0.000427, 0.000444, 0.000393, 0.000471, 0.000469, 0.000441, 0.000647, 0.000465, 0.00048, 0.000485, 0.000541, 0.000449, 0.000487, 0.000371, 0.000432, 0.000393, 0.000329, 0.000457, 0.000314, 0.000367, 0.000417, 0.000333, 0.000369, 0.000529, 0.000329, 0.000415, 0.000428, 0.000473, 0.000537, 0.000352, 0.000379, 0.000447, 0.000337, 0.000322, 0.000477, 0.000395, 0.000384, 0.000903, 0.000398, 0.000296, 0.00038, 0.000397, 0.000408, 0.000369, 0.000351, 0.000352, 0.000417, 0.00046, 0.000332, 0.000332, 0.00033, 0.000471, 0.000476, 0.000375, 0.000316, 0.000519, 0.000351, 0.000438, 0.000548, 0.000354, 0.000344, 0.000425, 0.000303, 0.000635, 0.000507, 0.000443, 0.000376, 0.000442, 0.000408, 0.00033, 0.000463, 0.000327, 0.001084, 0.00055, 0.00031, 0.000403, 0.000391, 0.001416, 0.000293, 0.000312, 0.000467, 0.000438, 0.000432, 0.001015, 0.000362, 0.000396, 0.00051, 0.000391, 0.000344, 0.001316, 0.00065, 0.000679, 0.000583, 0.000438, 0.000401, 0.000671, 0.000441, 0.000432, 0.000527, 0.000501, 0.000912, 0.000493, 0.00079, 0.000984, 0.000462, 0.000324, 0.000428, 0.000417, 0.000422, 0.000363, 0.000444, 0.000618, 0.000334, 0.000296, 0.000561, 0.00035, 0.000475, 0.000352, 0.000376, 0.000341, 0.000452, 0.000398, 0.000444, 0.000375, 0.000328, 0.000308, 0.000367, 0.00069, 0.000376, 0.000378, 0.000443, 0.000368, 0.000351, 0.001687, 0.000771, 0.000362, 0.000466, 0.000407, 0.000535, 0.000766, 0.000736, 0.000377, 0.000653, 0.000774, 0.000541, 0.000585, 0.000363, 0.000463, 0.000375, 0.000398, 0.000394, 0.000431, 0.000322, 0.000376, 0.000314, 0.000381, 0.000287, 0.000298, 0.000435, 0.000635, 0.000411, 0.00034, 0.000351, 0.000464, 0.000575, 0.000959, 0.000698, 0.000337, 0.000337, 0.000397, 0.000423, 0.00039, 0.000363, 0.000569, 0.000363, 0.000449, 0.000428, 0.000577, 0.000372, 0.000331, 0.000537, 0.000481, 0.00039, 0.000469, 0.000441, 0.000391, 0.000492, 0.000314, 0.000371, 0.000404, 0.000453, 0.000403, 0.000357, 0.000419, 0.000654, 0.000399, 0.000515, 0.000523, 0.000467, 0.000472, 0.000368, 0.000533, 0.000677, 0.000481, 0.000384, 0.000786, 0.000462, 0.000364, 0.000324, 0.00083, 0.000461, 0.00042, 0.000338, 0.000529, 0.000437, 0.000459, 0.000342, 0.000479, 0.000418, 0.000395, 0.000381, 0.000472, 0.000363, 0.000447, 0.000455, 0.000404, 0.000543, 0.00044, 0.000381, 0.00043, 0.00065, 0.000398, 0.000477, 0.000425, 0.000492, 0.000435, 0.000428, 0.000399, 0.000408, 0.00382, 0.000356, 0.000446, 0.000489, 0.000517, 0.000383, 0.000525, 0.000417, 0.000607, 0.000473, 0.000467, 0.001085, 0.001062, 0.000552, 0.000462, 0.000561, 0.000449, 0.000356, 0.000401, 0.000439, 0.000481, 0.000481, 0.000406, 0.000471, 0.00042, 0.000697, 0.000501, 0.000458, 0.000442, 0.000644, 0.000718, 0.00052, 0.000487, 0.000527, 0.000423, 0.00051, 0.000398, 0.000459, 0.000872, 0.000465, 0.00119, 0.00049, 0.000706, 0.00059, 0.000417, 0.000451, 0.000364, 0.000492, 0.000688, 0.000462, 0.000716, 0.000576, 0.000461, 0.00047, 0.000484, 0.001439, 0.000429, 0.000436, 0.000644, 0.000495, 0.000462, 0.000547, 0.000573, 0.000392, 0.000439, 0.000423, 0.000569, 0.000491, 0.000468, 0.000474, 0.000505, 0.001107, 0.000419, 0.000534, 0.00035, 0.000449, 0.000463, 0.000389, 0.0004, 0.000472, 0.000481, 0.000668, 0.000525, 0.000498, 0.000439, 0.000356, 0.000439, 0.000386, 0.000451, 0.00051, 0.000498, 0.000427, 0.000392, 0.000565, 0.000542, 0.000427, 0.000354, 0.000796, 0.000477, 0.00042, 0.000498, 0.000354, 0.000421, 0.000421, 0.000481, 0.000437, 0.000461, 0.000898, 0.000512, 0.000456, 0.001058, 0.000368, 0.000354, 0.000465, 0.000586, 0.000453, 0.000328, 0.000441, 0.000435, 0.000415, 0.000352, 0.000366, 0.000432, 0.000352, 0.000424, 0.000356, 0.000293, 0.000386, 0.000449, 0.000493, 0.000347, 0.000401, 0.000352, 0.000525, 0.000404, 0.000504, 0.000434, 0.00117, 0.000419, 0.000498, 0.00054, 0.000529, 0.000476, 0.000445, 0.000496, 0.000752, 0.000497, 0.000671, 0.000881, 0.000496, 0.000375, 0.000735, 0.000469, 0.000641, 0.000459, 0.00054, 0.000741, 0.00045, 0.000318, 0.000432, 0.000523, 0.000351, 0.000724, 0.000318, 0.0003, 0.000434, 0.000384, 0.00043, 0.000449, 0.000405, 0.000485, 0.000433, 0.000336, 0.000388, 0.00039, 0.000353, 0.000522, 0.000329, 0.000386, 0.000365, 0.000472, 0.000408, 0.000427, 0.000323, 0.0007, 0.00048, 0.000399, 0.000456, 0.000422, 0.000371, 0.00036, 0.000333, 0.000393, 0.000325, 0.000335, 0.000355, 0.000322, 0.000351, 0.00038, 0.000562, 0.000324, 0.000283, 0.000591, 0.000397, 0.000304, 0.000343, 0.000488, 0.00035, 0.000551, 0.000394, 0.000458, 0.000395, 0.00035, 0.000346, 0.000375, 0.000411, 0.000712, 0.000379, 0.000285, 0.000351, 0.000486, 0.000377, 0.000403, 0.000344, 0.000437, 0.000562, 0.000461, 0.000687, 0.000296, 0.000437, 0.000435, 0.000336, 0.000295, 0.000418, 0.00068, 0.000391, 0.000307, 0.000454, 0.00037, 0.000379, 0.000363, 0.000439, 0.000473, 0.000712, 0.000437, 0.000427, 0.00032, 0.000554, 0.00031, 0.000407, 0.000298, 0.000413, 0.000433, 0.000342, 0.000364]
prediction_time_excluding_numpy_preprocess = [2.302484, 0.047267, 0.0476, 0.045307, 0.04746, 0.043325, 0.043753, 0.045536, 0.044512, 0.053983, 0.050752, 0.044156, 0.044103, 0.043197, 0.04506, 0.046134, 0.044786, 0.045652, 0.049017, 0.048731, 0.110628, 0.045872, 0.043302, 0.051092, 0.044471, 0.043495, 0.043773, 0.043801, 0.049553, 0.044037, 0.046957, 0.048034, 0.044461, 0.044608, 0.045614, 0.044652, 0.05674, 0.044304, 0.045619, 0.045381, 0.047165, 0.052833, 0.047899, 0.045274, 0.048497, 0.049878, 0.047124, 0.048943, 0.049922, 0.054461, 0.049416, 0.048534, 0.04821, 0.050768, 0.056597, 0.050677, 0.047864, 0.045472, 0.05324, 0.050984, 0.046566, 0.046308, 0.058284, 0.05303, 0.047283, 0.044606, 0.048532, 0.05395, 0.047308, 0.046229, 0.045756, 0.059584, 0.046986, 0.045559, 0.048798, 0.043762, 0.045179, 0.067888, 0.052894, 0.059017, 0.066737, 0.071408, 0.058953, 0.045634, 0.045898, 0.049554, 0.045834, 0.044754, 0.05534, 0.048493, 0.062585, 0.047434, 0.04569, 0.049812, 0.04577, 0.058193, 0.051614, 0.053919, 0.050932, 0.050129, 0.051423, 0.049294, 0.046938, 0.045913, 0.04601, 0.051982, 0.048025, 0.049266, 0.044355, 0.043537, 0.047315, 0.047056, 0.043165, 0.042552, 0.049851, 0.044458, 0.047226, 0.047048, 0.043654, 0.043023, 0.044739, 0.046367, 0.056744, 0.044574, 0.047058, 0.045948, 0.043779, 0.045832, 0.047203, 0.050519, 0.059275, 0.050711, 0.045333, 0.052788, 0.048348, 0.05459, 0.047097, 0.047356, 0.043676, 0.046975, 0.051996, 0.046724, 0.048869, 0.046927, 0.044609, 0.044754, 0.046613, 0.050508, 0.052419, 0.048966, 0.044853, 0.047475, 0.045286, 0.04297, 0.045401, 0.044995, 0.048618, 0.053856, 0.047707, 0.053172, 0.089785, 0.053363, 0.053771, 0.057785, 0.050997, 0.055933, 0.052028, 0.048212, 0.04717, 0.047772, 0.049257, 0.04521, 0.048122, 0.04428, 0.096221, 0.061092, 0.047131, 0.047786, 0.047011, 0.05054, 0.049707, 0.044202, 0.050658, 0.045456, 0.047672, 0.044873, 0.052306, 0.044004, 0.044405, 0.044269, 0.056044, 0.057635, 0.043818, 0.044087, 0.04421, 0.049032, 0.044546, 0.046291, 0.046351, 0.045194, 0.053233, 0.04431, 0.044725, 0.046592, 0.048911, 0.048559, 0.044688, 0.049286, 0.065589, 0.058068, 0.06602, 0.048955, 0.053025, 0.047577, 0.045799, 0.047247, 0.049105, 0.051356, 0.043146, 0.043507, 0.046317, 0.049524, 0.042857, 0.045373, 0.048288, 0.055891, 0.052853, 0.048718, 0.048468, 0.058551, 0.049609, 0.044109, 0.04687, 0.045179, 0.059316, 0.04888, 0.047291, 0.042771, 0.047781, 0.047384, 0.047169, 0.047279, 0.045387, 0.054433, 0.049446, 0.046961, 0.046093, 0.047507, 0.04912, 0.044023, 0.047425, 0.069314, 0.049221, 0.048281, 0.050061, 0.055706, 0.050764, 0.050854, 0.047424, 0.048584, 0.051561, 0.046348, 0.043794, 0.047377, 0.043694, 0.048516, 0.044922, 0.042561, 0.055491, 0.04389, 0.054493, 0.051967, 0.048349, 0.049484, 0.048572, 0.047185, 0.050963, 0.057771, 0.05039, 0.07971, 0.054639, 0.047442, 0.045825, 0.047743, 0.046307, 0.050423, 0.054724, 0.046237, 0.049526, 0.049544, 0.045203, 0.045199, 0.050188, 0.044801, 0.05207, 0.051586, 0.048695, 0.047967, 0.047061, 0.046876, 0.046327, 0.053424, 0.051013, 0.056573, 0.044606, 0.044963, 0.046668, 0.046922, 0.045787, 0.049413, 0.054159, 0.054703, 0.048583, 0.056789, 0.043976, 0.046521, 0.0482, 0.046918, 0.046344, 0.048109, 0.062801, 0.067524, 0.049216, 0.043449, 0.051905, 0.045286, 0.046766, 0.0455, 0.047151, 0.054996, 0.045727, 0.045903, 0.044531, 0.05105, 0.045195, 0.046207, 0.059863, 0.061818, 0.055161, 0.048019, 0.047257, 0.048953, 0.047205, 0.045119, 0.048128, 0.053007, 0.055815, 0.057339, 0.05132, 0.053749, 0.047715, 0.051212, 0.053863, 0.047998, 0.054001, 0.045785, 0.055042, 0.052832, 0.048544, 0.049348, 0.045075, 0.046362, 0.046137, 0.0504, 0.050661, 0.048691, 0.046788, 0.047418, 0.045209, 0.04827, 0.045601, 0.048195, 0.054527, 0.047148, 0.046137, 0.052905, 0.048388, 0.046015, 0.045072, 0.047644, 0.056322, 0.044484, 0.045676, 0.043801, 0.047931, 0.046243, 0.047055, 0.051946, 0.045824, 0.056795, 0.047196, 0.045753, 0.05225, 0.051639, 0.04919, 0.048667, 0.072287, 0.063088, 0.052265, 0.052384, 0.049833, 0.053247, 0.048566, 0.081484, 0.059894, 0.048057, 0.057281, 0.044789, 0.048414, 0.053746, 0.045167, 0.045401, 0.046406, 0.04988, 0.044042, 0.050865, 0.045367, 0.059089, 0.048636, 0.04976, 0.04895, 0.045733, 0.047642, 0.055285, 0.165604, 0.043631, 0.044324, 0.048129, 0.045621, 0.046652, 0.048972, 0.046698, 0.054301, 0.044965, 0.046694, 0.04958, 0.04527, 0.052418, 0.045045, 0.042924, 0.052408, 0.049888, 0.046212, 0.04535, 0.050809, 0.044786, 0.046987, 0.042754, 0.046167, 0.059913, 0.0479, 0.049559, 0.045029, 0.052691, 0.051161, 0.049425, 0.04697, 0.0492, 0.074835, 0.050254, 0.045628, 0.043523, 0.044043, 0.046637, 0.051625, 0.051387, 0.055147, 0.043721, 0.045215, 0.047422, 0.046002, 0.045821, 0.04617, 0.048724, 0.043382, 0.053472, 0.045052, 0.044002, 0.043957, 0.045186, 0.047483, 0.043186, 0.042747, 0.056378, 0.045339, 0.043834, 0.045997, 0.043586, 0.04572, 0.043823, 0.044506, 0.049123, 0.053295, 0.045941, 0.047418, 0.046281, 0.04659, 0.047739, 0.044651, 0.044636, 0.045975, 0.053168, 0.045859, 0.04424, 0.046237, 0.052879, 0.044733, 0.042899, 0.045013, 0.052469, 0.046901, 0.053045, 0.047144, 0.047226, 0.049991, 0.050289, 0.047722, 0.050003, 0.055277, 0.052912, 0.04593, 0.043292, 0.044391, 0.047342, 0.046343, 0.04473, 0.05136, 0.046667, 0.045648, 0.052657, 0.048625, 0.048772, 0.045921, 0.048614, 0.049161, 0.050496, 0.048633, 0.050677, 0.044925, 0.056317, 0.046025, 0.04801, 0.049284, 0.047735, 0.061198, 0.051204, 0.053825, 0.048069, 0.047663, 0.049972, 0.052459, 0.046285, 0.057132, 0.060534, 0.050844, 0.046514, 0.049497, 0.046579, 0.046801, 0.049917, 0.050353, 0.060654, 0.04989, 0.045041, 0.048651]
prediction_time_including_numpy_preprocess = [2.304303, 0.047624, 0.047998, 0.045733, 0.048004, 0.043798, 0.044147, 0.045977, 0.044909, 0.054386, 0.051299, 0.044538, 0.04458, 0.043613, 0.045455, 0.046491, 0.045147, 0.045963, 0.049333, 0.049127, 0.111037, 0.046273, 0.043646, 0.051503, 0.04528, 0.043916, 0.044212, 0.044128, 0.049921, 0.04445, 0.047262, 0.048449, 0.044887, 0.045019, 0.04615, 0.045042, 0.057129, 0.04474, 0.046068, 0.045952, 0.047692, 0.053491, 0.048329, 0.045648, 0.048988, 0.050402, 0.047488, 0.049427, 0.050444, 0.054826, 0.049865, 0.048961, 0.048629, 0.051335, 0.057833, 0.051007, 0.048237, 0.046603, 0.053603, 0.051388, 0.046984, 0.046618, 0.058886, 0.053525, 0.047611, 0.045159, 0.049258, 0.05429, 0.047763, 0.046741, 0.046216, 0.060011, 0.04743, 0.045952, 0.049269, 0.044231, 0.04562, 0.068535, 0.053359, 0.059497, 0.067222, 0.071949, 0.059402, 0.046121, 0.046269, 0.049986, 0.046227, 0.045083, 0.055797, 0.048807, 0.062952, 0.047851, 0.046023, 0.050181, 0.046299, 0.058522, 0.052029, 0.054347, 0.051405, 0.050666, 0.051775, 0.049673, 0.047385, 0.04625, 0.046332, 0.052459, 0.04842, 0.04965, 0.045258, 0.043935, 0.047611, 0.047436, 0.043562, 0.04296, 0.05022, 0.044809, 0.047578, 0.047465, 0.044114, 0.043355, 0.045071, 0.046697, 0.057215, 0.04505, 0.047433, 0.046264, 0.044298, 0.046183, 0.047641, 0.051067, 0.059629, 0.051055, 0.045758, 0.053091, 0.048983, 0.055097, 0.04754, 0.047732, 0.044118, 0.047383, 0.052326, 0.047187, 0.049196, 0.048011, 0.045159, 0.045064, 0.047016, 0.050899, 0.053835, 0.049259, 0.045165, 0.047942, 0.045724, 0.043402, 0.046416, 0.045357, 0.049014, 0.054366, 0.048098, 0.053516, 0.091101, 0.054013, 0.05445, 0.058368, 0.051435, 0.056334, 0.052699, 0.048653, 0.047602, 0.048299, 0.049758, 0.046122, 0.048615, 0.04507, 0.097205, 0.061554, 0.047455, 0.048214, 0.047428, 0.050962, 0.05007, 0.044646, 0.051276, 0.04579, 0.047968, 0.045434, 0.052656, 0.044479, 0.044757, 0.044645, 0.056385, 0.058087, 0.044216, 0.044531, 0.044585, 0.04936, 0.044854, 0.046658, 0.047041, 0.04557, 0.053611, 0.044753, 0.045093, 0.046943, 0.050598, 0.04933, 0.04505, 0.049752, 0.065996, 0.058603, 0.066786, 0.049691, 0.053402, 0.04823, 0.046573, 0.047788, 0.04969, 0.051719, 0.043609, 0.043882, 0.046715, 0.049918, 0.043288, 0.045695, 0.048664, 0.056205, 0.053234, 0.049005, 0.048766, 0.058986, 0.050244, 0.04452, 0.04721, 0.04553, 0.05978, 0.049455, 0.04825, 0.043469, 0.048118, 0.047721, 0.047566, 0.047702, 0.045777, 0.054796, 0.050015, 0.047324, 0.046542, 0.047935, 0.049697, 0.044395, 0.047756, 0.069851, 0.049702, 0.048671, 0.05053, 0.056147, 0.051155, 0.051346, 0.047738, 0.048955, 0.051965, 0.046801, 0.044197, 0.047734, 0.044113, 0.04917, 0.045321, 0.043076, 0.056014, 0.044357, 0.054965, 0.052335, 0.048882, 0.050161, 0.049053, 0.047569, 0.051749, 0.058233, 0.050754, 0.080034, 0.055469, 0.047903, 0.046245, 0.048081, 0.046836, 0.05086, 0.055183, 0.046579, 0.050005, 0.049962, 0.045598, 0.04558, 0.05066, 0.045164, 0.052517, 0.052041, 0.049099, 0.04851, 0.047501, 0.047257, 0.046757, 0.054074, 0.051411, 0.05705, 0.045031, 0.045455, 0.047103, 0.04735, 0.046186, 0.049821, 0.057979, 0.055059, 0.049029, 0.057278, 0.044493, 0.046904, 0.048725, 0.047335, 0.046951, 0.048582, 0.063268, 0.068609, 0.050278, 0.044001, 0.052367, 0.045847, 0.047215, 0.045856, 0.047552, 0.055435, 0.046208, 0.046384, 0.044937, 0.051521, 0.045615, 0.046904, 0.060364, 0.062276, 0.055603, 0.048663, 0.047975, 0.049473, 0.047692, 0.045646, 0.048551, 0.053517, 0.056213, 0.057798, 0.052192, 0.054214, 0.048905, 0.051702, 0.054569, 0.048588, 0.054418, 0.046236, 0.055406, 0.053324, 0.049232, 0.04981, 0.045791, 0.046938, 0.046598, 0.05087, 0.051145, 0.05013, 0.047217, 0.047854, 0.045853, 0.048765, 0.046063, 0.048742, 0.0551, 0.04754, 0.046576, 0.053328, 0.048957, 0.046506, 0.04554, 0.048118, 0.056827, 0.045591, 0.046095, 0.044335, 0.048281, 0.046692, 0.047518, 0.052335, 0.046224, 0.057267, 0.047677, 0.046421, 0.052775, 0.052137, 0.049629, 0.049023, 0.072726, 0.063474, 0.052716, 0.052894, 0.050331, 0.053674, 0.048958, 0.082049, 0.060436, 0.048484, 0.057635, 0.045585, 0.048891, 0.054166, 0.045665, 0.045755, 0.046827, 0.050301, 0.044523, 0.051302, 0.045828, 0.059987, 0.049148, 0.050216, 0.050008, 0.046101, 0.047996, 0.05575, 0.16619, 0.044084, 0.044652, 0.04857, 0.046056, 0.047067, 0.049324, 0.047064, 0.054733, 0.045317, 0.047118, 0.049936, 0.045563, 0.052804, 0.045494, 0.043417, 0.052755, 0.050289, 0.046564, 0.045875, 0.051213, 0.04529, 0.047421, 0.043924, 0.046586, 0.060411, 0.04844, 0.050088, 0.045505, 0.053136, 0.051657, 0.050177, 0.047467, 0.049871, 0.075716, 0.05075, 0.046003, 0.044258, 0.044512, 0.047278, 0.052084, 0.051927, 0.055888, 0.044171, 0.045533, 0.047854, 0.046525, 0.046172, 0.046894, 0.049042, 0.043682, 0.053906, 0.045436, 0.044432, 0.044406, 0.045591, 0.047968, 0.043619, 0.043083, 0.056766, 0.045729, 0.044187, 0.046519, 0.043915, 0.046106, 0.044188, 0.044978, 0.049531, 0.053722, 0.046264, 0.048118, 0.046761, 0.046989, 0.048195, 0.045073, 0.045007, 0.046335, 0.053501, 0.046252, 0.044565, 0.046572, 0.053234, 0.045055, 0.04325, 0.045393, 0.053031, 0.047225, 0.053328, 0.047735, 0.047623, 0.050295, 0.050632, 0.04821, 0.050353, 0.055828, 0.053306, 0.046388, 0.043687, 0.044741, 0.047688, 0.046718, 0.045141, 0.052072, 0.047046, 0.045933, 0.053008, 0.049111, 0.049149, 0.046324, 0.048958, 0.049598, 0.051058, 0.049094, 0.051364, 0.045221, 0.056754, 0.04646, 0.048346, 0.049579, 0.048153, 0.061878, 0.051595, 0.054132, 0.048523, 0.048033, 0.050351, 0.052822, 0.046724, 0.057605, 0.061246, 0.051281, 0.046941, 0.049817, 0.047133, 0.047111, 0.050324, 0.050651, 0.061067, 0.050323, 0.045383, 0.049015]


n_samples_load_model = len(load_model_time_including_gpu)
n_samples_numpy_preprocess_time = len(numpy_preprocess_time)
n_samples_pred_time = len(prediction_time_including_numpy_preprocess)
n_samples_prediction_time_excluding_numpy_preprocess = len(prediction_time_excluding_numpy_preprocess)
n_samples_prediction_time_including_numpy_preprocess = len(prediction_time_including_numpy_preprocess)


#All of these are including the first value
average_load_model_time_including_gpu = sum(load_model_time_including_gpu) / n_samples_load_model
average_numpy_preprocess_time = sum(numpy_preprocess_time) / n_samples_numpy_preprocess_time
average_prediction_time_excluding_numpy_preprocess = sum(prediction_time_excluding_numpy_preprocess) / n_samples_prediction_time_excluding_numpy_preprocess
average_prediction_time_including_numpy_preprocess = sum(prediction_time_including_numpy_preprocess) / n_samples_prediction_time_including_numpy_preprocess

##Here we will use including numpy preprocess only
average_prediction_time_excluding_first_val = sum(prediction_time_including_numpy_preprocess[1:]) / (n_samples_prediction_time_including_numpy_preprocess -1)


print("Average Load Model Time", average_load_model_time_including_gpu)
print("Average Numpy Preprocess Time", average_numpy_preprocess_time)
print("Average Prediction Excluding Numpy Preprocess Time", average_prediction_time_excluding_numpy_preprocess)
print("Average Prediction Including Numpy Preprocess Time", average_prediction_time_including_numpy_preprocess)


print("Average Time Prediction excluding first value and including numpy", average_prediction_time_excluding_first_val)



x = [i+1 for i in range(len(numpy_preprocess_time))]
x_load_model = [i+1 for i in range(len(load_model_time_including_gpu))]



#NUMPY PREPROCESS TIME
plt.figure(num=1)
plt.plot(x, numpy_preprocess_time)
plt.title("Numpy Gefrorene Leistung neuronaler Netze auf einer x86-Prozessarchitektur in Python")
plt.xlabel("Iteration")
plt.ylabel("Zeit in Sekunden")
plt.grid(linestyle='-')
plt.hlines(average_numpy_preprocess_time, 1, n_samples_numpy_preprocess_time, color='red')
plt.xlim(0, 200)
plt.show()


#LOAD MODEL TIME
plt.figure(num=2)
plt.plot(x_load_model, load_model_time_including_gpu)
plt.title("Numpy Gefrorene Leistung neuronaler Netze auf einer x86-Prozessarchitektur in Python")
plt.xlabel("Proben")
plt.ylabel("Zeit in Sekunden")
plt.grid(linestyle='-')
plt.hlines(average_load_model_time_including_gpu, 1, n_samples_load_model, color='red')
plt.show()


#INCLUDING THE FIRST VALUE
plt.figure(num=3)
plt.plot(x, prediction_time_including_numpy_preprocess)
plt.title(" Gefrorene Leistung neuronaler Netze auf einer x86-Prozessarchitektur in Python")
plt.xlabel("Iteration")
plt.ylabel("Zeit in Sekunden")
plt.grid(linestyle='-')
plt.hlines(average_prediction_time_including_numpy_preprocess, 1, n_samples_prediction_time_including_numpy_preprocess, color='red')
plt.xlim(0, 200)
plt.show()

# EXCLUDING THE FIRST VALUE
plt.figure(num=4)
plt.plot(x[:-1], prediction_time_including_numpy_preprocess[1:])
plt.title(" Gefrorene Leistung neuronaler Netze auf einer x86-Prozessarchitektur in Python")
plt.xlabel("Iteration")
plt.ylabel("Zeit in Sekunden")
plt.grid(linestyle='-')
plt.hlines(average_prediction_time_excluding_first_val, 1, n_samples_prediction_time_excluding_numpy_preprocess-1, color='red')
plt.xlim(0, 200)
plt.show()
